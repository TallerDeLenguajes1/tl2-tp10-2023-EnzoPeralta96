@{
    ViewData["Title"] = "Iniciar sesión";
}
@model ViewModels.LoginViewModels

<div class="contenedor2">
    <h1>Tablero Kanban</h1>

    <h2>Gestión de tareas</h2>

    @if (Model.TieneMensajeError)
    {
        <div id="mensajeTemporal" class="alert alert-danger mensajes-form">
            @Model.MensajeError
        </div>
    }

    <div class="border border-primary border-3 p-3 rounded contenedor-form">

        <h3 class="textoLogin">Inicio de sesión</h3>

        <p class="textoLogin">Ingrese su usario y contraseña para continuar</p>

        <form asp-controller="Login" asp-action="LoginUser">
            <div class="mb-3">
                <label class="form-label label-login" asp-for="@Model.Usuario"></label>
                <input class="form-control input-login" asp-for="@Model.Usuario" />
                <span asp-validation-for="@Model.Usuario" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label class="form-label label-login" asp-for="@Model.Password"></label>
                <input class="form-control input-login" asp-for="@Model.Password" />
                <span asp-validation-for="@Model.Password" class="text-danger"></span>
            </div>

            <!---->
            <div id="contenedor-botonLogin">
                <button type="submit" class="btn btn-outline-dark w-100 py-2 input-login">Iniciar sesión</button>
            </div>
        </form>

    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var mensajeTemporal = document.getElementById('mensajeTemporal');
        if (mensajeTemporal) {
            setTimeout(function () {
                mensajeTemporal.classList.add('mensaje-oculto');
            }, 5000);
        }
    });
</script>
